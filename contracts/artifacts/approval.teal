#pragma version 8
intcblock 0 1 32
bytecblock 0x 0x73657475705f636f6d706c657465 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xb18deffc // "setup(pay)string"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0xb5267fc3 // "add_record(byte[32],uint16,byte[32],uint8,byte[32],uint64)void"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0x6036a5c9 // "get_record(byte[32])(uint16,byte[32],uint8,byte[32],uint64)"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
callsub getrecord_2
store 8
bytec_2 // 0x151f7c75
load 8
concat
log
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 2
txna ApplicationArgs 2
intc_0 // 0
extract_uint16
store 3
txna ApplicationArgs 3
store 4
txna ApplicationArgs 4
intc_0 // 0
getbyte
store 5
txna ApplicationArgs 5
store 6
txna ApplicationArgs 6
btoi
store 7
load 2
load 3
load 4
load 5
load 6
load 7
callsub addrecord_1
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txn GroupIndex
intc_1 // 1
-
store 0
load 0
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
callsub setup_0
store 1
bytec_2 // 0x151f7c75
load 1
concat
log
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
intc_1 // 1
return

// setup
setup_0:
proto 1 1
bytec_0 // ""
txn Sender
global CreatorAddress
==
// unauthorized
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
// Payment must be sent to this contract
assert
frame_dig -1
gtxns Amount
pushint 4530000 // 4530000
>=
// Payment must be enough to cover box storage minimum balance
assert
bytec_1 // "setup_complete"
intc_1 // 1
app_global_put
pushbytes 0x000e536574757020636f6d706c657465 // 0x000e536574757020636f6d706c657465
frame_bury 0
retsub

// add_record
addrecord_1:
proto 6 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_1 // "setup_complete"
app_global_get
intc_1 // 1
==
// Setup must be complete
assert
intc_2 // 32
intc_2 // 32
<=
// Ref must be <= 32 bytes
assert
intc_2 // 32
intc_2 // 32
<=
// Item code must be <= 32 bytes
assert
intc_2 // 32
intc_2 // 32
<=
// Key must be < 32 bytes
assert
frame_dig -5
itob
extract 6 0
frame_dig -4
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig -3
setbyte
concat
frame_dig -2
concat
frame_dig -1
itob
concat
frame_bury 0
frame_dig -6
box_del
pop
frame_dig -6
frame_dig 0
box_put
retsub

// get_record
getrecord_2:
proto 1 1
bytec_0 // ""
dup
bytec_1 // "setup_complete"
app_global_get
intc_1 // 1
==
// Setup must be complete
assert
frame_dig -1
box_get
store 10
store 9
load 10
assert
load 9
frame_bury 0
frame_dig 0
extract 2 32
frame_bury 1
frame_dig 1
log
retsub